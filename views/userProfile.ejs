<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"
      integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
      crossorigin="anonymous"
    />
    <title>Document</title>
    <link
      rel="stylesheet"
      href="https://unpkg.com/cropperjs/dist/cropper.min.css"
    />
    <script src="https://unpkg.com/cropperjs/dist/cropper.min.js"></script>
    <style>
      body,
      html {
        height: 100%;
      }
      .custom-input {
        height: 200px;
      }

      #overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1;
      }

      #modal {
        position: fixed;
        top: 50%;
        right: 0;
        transform: translate(0, -50%);
        background: #fff;
        padding: 20px;
        border-radius: 5px;
        z-index: 2;
        /* width: 35%; */
        height: 100%;
        overflow-y: auto; /* Allow scrolling if content exceeds modal height */
      }
      .imgdims {
        width: 400px;
        height: 300px;
        margin: auto;
      }
      .modal {
        border: 5px solid black;
        border-radius: 10px;
      }
      .imgdims {
        width: 100%;
        height: auto; /* Maintain aspect ratio */
        max-height: 300px;
        margin: auto;
        border: 1px solid #ddd; /* Add a border for clarity */
        border-radius: 5px;
      }

      .modal-content {
        margin-bottom: 20px; /* Adjusted to create space between paragraphs and image */
        height: 50px;
      }

      .modal-text {
        font-weight: bold;
        margin-right: 5px;
        font-size: medium;
      }

      .modal {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 10px;
      }
      .adminspan {
        margin-top: 280px;
        text-align: center;
        font-size: larger;
        font-family: cursive;
      }
    </style>
  </head>
  <body>
    <div class="container h-100 d-flex flex-column justify-content-center">
      <div class="m-2 p-1 ml-auto">
        <button class="btn btn-outline-primary fixed" onclick="showModal()">
          View
        </button>
      </div>
      <div class="mx-auto w-lg-50 pb-3 my-auto">
        <div
          class="modal fade cropped-container"
          id="exampleModal"
          tabindex="-1"
          role="dialog"
          aria-labelledby="exampleModalLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title text-center" id="exampleModalLabel">
                  Cropped Image
                </h5>
                <button
                  type="button"
                  class="close"
                  data-dismiss="modal"
                  aria-label="Close"
                >
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <img src="" alt="" id="output" class="imgdims p-2" />
              </div>
              <div class="modal-footer">
                <form action="" id="modalForm">
                  <input type="text" id="originalName" style="display: none" />
                  <input type="file" id="imageInput" style="display: none" />
                  <button
                    type="button"
                    class="btn btn-secondary"
                    data-dismiss="modal"
                  >
                    Close
                  </button>
                  <button
                    type="button"
                    class="btn btn-primary"
                    id="saveChangesBtn"
                  >
                    Save changes
                  </button>
                </form>
              </div>
            </div>
          </div>
        </div>
        <form
          action="/upload"
          method="post"
          class="m-3 p-2"
          enctype="multipart/form-data"
          id="uploadForm"
        >
          <label for="Name">Name:</label>
          <input
            type="text"
            class="form-control m-3 p-2 col-xl mx-auto"
            id="name"
            name="name"
          />

          <label for="Photo">Photo:</label>
          <input
            type="file"
            name="testImage"
            id="testImage"
            accept="image/*"
            class="form-control m-3 p-2 col-xl mx-auto"
          />
          <div>
            <img id="image" src="" alt="" class="imgdims p-2" />
          </div>
          <button
            class="btn btn-outline-secondary btn-block"
            type="button"
            id="btn-crop"
            style="display: none"
            onclick="cropped();"
            data-toggle="modal"
            data-target="#exampleModal"
          >
            Confirm Crop
          </button>
          <button
            class="btn btn-outline-secondary btn-block"
            onclick="cropImage()"
            id="beforeCrop"
          >
            Crop
          </button>
          <button class="btn btn-primary btn-block" type="submit">
            Upload
          </button>
        </form>
      </div>
      <div id="overlay">
        <div id="modal" class="w-md-25">
          <button onclick="hideModal()" class="btn btn-outline-primary m-3">
            Back
          </button>
          <div class="d-flex flex-column m-3 p-2">
            <span class="">Name</span>
            <div class="modal-content">
              <span id="username" class="m-3 modal-text"></span>
            </div>
            <span class="">Photo</span>
            <div class="modal-content">
              <img
                id="modalImage"
                src=""
                alt="Uploaded Photo"
                class="imgdims"
              />
            </div>

            <span id="confirmation" class="adminspan"></span>
          </div>
        </div>
      </div>
    </div>

    <script
      src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
      integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
      integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"
      integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
      crossorigin="anonymous"
    ></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
      function dataURItoBlob(dataURI) {
        try {
          const base64Index = dataURI.indexOf(",") + 1;
          const base64 = dataURI.substring(base64Index);

          const byteString = atob(base64);
          const ab = new ArrayBuffer(byteString.length);
          const ia = new Uint8Array(ab);

          for (let i = 0; i < byteString.length; i++) {
            ia[i] = byteString.charCodeAt(i);
          }

          // Create Blob
          return new Blob([ab], { type: "image/jpeg" });
        } catch (error) {
          console.error("Error converting data URI to Blob:", error);
          throw error;
        }
      }
      document
        .getElementById("saveChangesBtn")
        .addEventListener("click", () => {
          const imageSrc = document.getElementById("output").src;

          const blob = dataURItoBlob(imageSrc);
          const file = new File(
            [blob],
            `${document.getElementById("name").value}.jpg`,
            { type: "image/png" }
          );
          const formData = new FormData();
          formData.append("name", document.getElementById("name").value);
          formData.append("testImage", file);

          // Send the form data using AJAX
          $.ajax({
            type: "POST",
            url: "/upload",
            data: formData,
            processData: false,
            contentType: false,
            headers: {
              Authorization: `Bearer ${localStorage.getItem("token")}`,
            },
            success: function (response) {
              console.log(response.newImage);
            },
            error: function (error) {
              console.error(error);
            },
          });
        });

      let cropper;
      function cropImage() {
        const image = document.getElementById("image");
        cropper = new Cropper(image, {
          aspectRatio: 0,
        });
        document.getElementById("beforeCrop").style.display = "none";
        document.getElementById("btn-crop").style.display = "block";
      }
      function cropped() {
        document
          .querySelector("#btn-crop")
          .addEventListener("click", function () {
            var cropperImage = cropper
              .getCroppedCanvas()
              .toDataURL("image/png");
            document.getElementById("output").src = cropperImage;
            document.querySelector(".cropped-container").style.display = "flex";
            document.getElementById("image").style.display = "none";
          });
      }
      function getQueryParam(name) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(name);
      }
      async function getConfirmation() {
        const token = localStorage.getItem("token");

        const userIdFromURL = getQueryParam("id");
        const name = document.getElementById("name").value;
        console.log("I am here", userIdFromURL);
        const data = {
          userId: userIdFromURL,
        };

        const res = await fetch(
          "http://localhost:3000/api/v1/user/confirmation",
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${token}`,
            },
            body: JSON.stringify(data),
          }
        );
        const response = await res.json();
        if (!response[0].confirmed) {
          const name = document.getElementById("username");
          name.innerHTML = response[0].name;
          const image = document.getElementById("modalImage");
          image.src = `..${response[0].path}`;
          const confirmation = document.getElementById("confirmation");
          confirmation.innerHTML = "Not Accepted by Admin";
          confirmation.style.color = "red";
        }
        if (response[0].confirmed) {
          const name = document.getElementById("username");
          name.innerHTML = response[0].name;
          const image = document.getElementById("modalImage");
          image.src = `..${response[0].path}`;
          const confirmation = document.getElementById("confirmation");
          confirmation.innerHTML = "Accepted by Admin";
          confirmation.style.color = "green";
        }
      }
      function showModal() {
        document.getElementById("overlay").style.display = "block";
        document.getElementById("modal").style.display = "block";
        getConfirmation();
      }

      function hideModal() {
        document.getElementById("overlay").style.display = "none";
        document.getElementById("modal").style.display = "none";
      }

      document
        .getElementById("uploadForm")
        .addEventListener("submit", function (event) {
          event.preventDefault();

          const formData = new FormData(event.target);
          console.log(formData);

          // Send the form data using AJAX
          $.ajax({
            type: "POST",
            url: "/upload",
            data: formData,
            processData: false,
            contentType: false,
            headers: {
              Authorization: `Bearer ${localStorage.getItem("token")}`,
            },
            success: function (response) {
              console.log(response.newImage);
              const filePath = response.newImage.path;

              const name = document.getElementById("name").value;
              const modalName = document.getElementById("username");
              modalName.innerHTML = name;
              console.log("This is the name", name);

              const modalImageElement = document.getElementById("modalImage");
              modalImageElement.src = filePath;
              const image = document.getElementById("image");
              image.src = filePath;
            },
            error: function (error) {
              console.error(error);
            },
          });
        });
    </script>
  </body>
</html>
